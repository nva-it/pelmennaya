variables: 
  SAST_EXCLUDED_ANALYZERS: "spotbugs, gosec-sast"

include:
  - template: Security/SAST.gitlab-ci.yml
  - project: "templates/ci"
    file: "DockerInDockerTemplate.yml"

stages:
  - test
  - build
  - release
  - notify
  
sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  allow_failure: true
  script:
    - cd frontend
    - >
      sonar-scanner 
      -Dsonar.qualitygate.wait=true 
      -Dsonar.projectKey=${SONAR_KEY_F} 
      -Dsonar.sources=. 
      -Dsonar.host.url=${SONAR_URL} 
      -Dsonar.login=${SONAR_LOGIN_F}

build-docker-image:
  stage: build
  cache: []
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/frontend"
      --build-arg VERSION=$VERSION
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/momo-frontend:${VERSION}"
      --cache=true

upload-image-latest:
  cache: []
  image: docker:20.10.12-dind-rootless
  stage: release
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/momo-frontend:$VERSION
    # если образ прошел проверки в CI (сканирование, тесты и т.д), то тегаем latest
    - docker tag $CI_REGISTRY_IMAGE/momo-frontend:$VERSION $CI_REGISTRY_IMAGE/momo-frontend:latest
    - docker push $CI_REGISTRY_IMAGE/momo-frontend:latest


telegram-notify-frontend:
  stage: notify
  script:
    - > 
      curl -X POST -H "Content-Type: application/json" -d 
      "{\"chat_id\": \"-XXXXXX\", 
      \"text\": \"New release momo-frontend\"}" 
      https://api.telegram.org/botXXXXXXX:XXXXXX/sendMessage
  needs:
    - upload-image-latest
  when: manual
